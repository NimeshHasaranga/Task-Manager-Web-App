{"ast":null,"code":"var _jsxFileName = \"F:\\\\new folder\\\\Task-Manager-Web-App\\\\frontend\\\\src\\\\pages\\\\EditTask.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport TaskForm from '../components/TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTask() {\n  _s();\n  const [task, setTask] = useState(null);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/tasks/${id}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setTask(response.data);\n      } catch (error) {\n        console.error('Error fetching task:', error);\n        navigate('/');\n      }\n    };\n    fetchTask();\n  }, [id, navigate]);\n  if (!task) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TaskForm, {\n    task: task,\n    isEdit: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n_s(EditTask, \"Cgt4Cu+v+QDQqgt/TmXdPtn85ek=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","axios","TaskForm","jsxDEV","_jsxDEV","EditTask","_s","task","setTask","id","navigate","fetchTask","response","get","headers","Authorization","localStorage","getItem","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","isEdit","_c","$RefreshReg$"],"sources":["F:/new folder/Task-Manager-Web-App/frontend/src/pages/EditTask.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport TaskForm from '../components/TaskForm';\r\n\r\nfunction EditTask() {\r\n  const [task, setTask] = useState(null);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchTask = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/tasks/${id}`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n        });\r\n        setTask(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching task:', error);\r\n        navigate('/');\r\n      }\r\n    };\r\n\r\n    fetchTask();\r\n  }, [id, navigate]);\r\n\r\n  if (!task) return <div>Loading...</div>;\r\n\r\n  return <TaskForm task={task} isEdit />;\r\n}\r\n\r\nexport default EditTask;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM;IAAEY;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmCJ,EAAE,EAAE,EAAE;UACxEK,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAAG;QACtE,CAAC,CAAC;QACFT,OAAO,CAACI,QAAQ,CAACM,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CT,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,EAAE,EAAEC,QAAQ,CAAC,CAAC;EAElB,IAAI,CAACH,IAAI,EAAE,oBAAOH,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvC,oBAAOrB,OAAA,CAACF,QAAQ;IAACK,IAAI,EAAEA,IAAK;IAACmB,MAAM;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxC;AAACnB,EAAA,CAxBQD,QAAQ;EAAA,QAEAN,SAAS,EACPC,WAAW;AAAA;AAAA2B,EAAA,GAHrBtB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}